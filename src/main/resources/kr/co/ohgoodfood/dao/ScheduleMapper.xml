<?xml version="1.0" encoding="UTF-8"?>
<!-- Mapper의 이름은 Mapper 인터페이스와 맞춰준다. -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http:/mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ohgoodfood.dao.ScheduleMapper">

    <!-- 금일 예약 가게 가져오기 -->
    <select id="todayReservation" parameterType="String" resultType="kr.co.ohgoodfood.dto.ReservationConfirmed">
        SELECT store_id, reservation_end, product_no
        FROM Product
        WHERE reservation_end = STR_TO_DATE(#{formattedDate}, '%Y-%m-%d %H:%i:%s');
    </select>

    <!-- 금일 예약 가게 상태 업데이트 -->
    <update id="updateStoreStatus" parameterType="kr.co.ohgoodfood.dto.ReservationConfirmed">
        UPDATE Store SET store_status = "N"
        WHERE store_id = #{store_id};
    </update>

    <!-- 금일 예약 가게 주문 가져오기 -->
    <select id="todayReservationOrder" parameterType="String" resultType="kr.co.ohgoodfood.dto.ReservationConfirmed">
        SELECT p.store_id AS store_id, p.reservation_end AS reservation_end, o.user_id AS user_id, o.order_status AS order_status, o.order_no AS order_no, p.product_no AS product_no
        FROM (SELECT p.store_id AS store_id, p.reservation_end AS reservation_end, p.product_no AS product_no
        FROM Product p
        WHERE reservation_end = STR_TO_DATE(#{formattedDate}, '%Y-%m-%d %H:%i:%s')) p 
        JOIN (SELECT o.store_id AS store_id, o.user_id AS user_id, o.order_status AS order_status, o.order_no AS order_no, o.product_no AS product_no
        FROM Orders o
        WHERE order_status = 'reservation') o
        ON p.store_id = o.store_id and p.product_no = o.product_no;
    </select>
    
    <!-- 금일 예약 가게 주문 상태 확정 업데이트 -->
    <update id="updateOrderStatus" parameterType="kr.co.ohgoodfood.dto.ReservationConfirmed">
        UPDATE Orders SET order_status = "confirmed", order_code = #{order_code}
        WHERE order_no = #{order_no} and product_no = #{product_no};
    </update>

    <!-- 금일 예약 가게 주문 상태 취소 업데이트 -->
    <update id="updateOrderStatusCancel" parameterType="kr.co.ohgoodfood.dto.ReservationConfirmed">
        UPDATE Orders SET order_status = "cancel", canceld_from = "user"
        WHERE order_no = #{order_no} and product_no = #{product_no};
    </update>

    <!-- 픽업 시간 종료 가게 가져오기 -->
    <select id="pickupEnd" parameterType="String" resultType="kr.co.ohgoodfood.dto.ReservationConfirmed">
        SELECT p.store_id AS store_id, p.pickup_end AS pickup_end
        FROM Product p
        WHERE pickup_end = STR_TO_DATE(#{formattedDate}, '%Y-%m-%d %H:%i:%s');
    </select>

    <!-- 픽업 안 된 주문 가져오기 , 픽업 시간 종료 기준 -->
    <select id="pickupNotDone" parameterType="String" resultType="kr.co.ohgoodfood.dto.ReservationConfirmed">
        SELECT p.store_id AS store_id, p.pickup_end AS pickup_end, o.user_id AS user_id, o.order_status AS order_status, o.order_no AS order_no, p.product_no AS product_no
        FROM (SELECT p.store_id AS store_id, p.pickup_end AS pickup_end, p.product_no AS product_no
        FROM Product p
        WHERE pickup_end = STR_TO_DATE(#{formattedDate}, '%Y-%m-%d %H:%i:%s')) p 
        JOIN (SELECT o.store_id AS store_id, o.user_id AS user_id, o.order_status AS order_status, o.order_no AS order_no, o.product_no AS product_no
        FROM Orders o
        WHERE order_status = 'confirmed') o
        ON p.store_id = o.store_id and p.product_no = o.product_no;
    </select>

    <!-- 픽업 안 된 주문 가져오기, 픽업 시간 시작 기준-->
    <select id="pickupNotDoneStart" parameterType="String" resultType="kr.co.ohgoodfood.dto.ReservationConfirmed">
        SELECT p.store_id AS store_id, p.pickup_start AS pickup_start, o.user_id AS user_id, o.order_status AS order_status, o.order_no AS order_no, p.product_no AS product_no
        FROM (SELECT p.store_id AS store_id, p.pickup_start AS pickup_start, p.product_no AS product_no
        FROM Product p
        WHERE pickup_start = STR_TO_DATE(#{formattedDate}, '%Y-%m-%d %H:%i:%s')) p 
        JOIN (SELECT o.store_id AS store_id, o.user_id AS user_id, o.order_status AS order_status, o.order_no AS order_no, o.product_no AS product_no
        FROM Orders o
        WHERE order_status = 'confirmed') o
        ON p.store_id = o.store_id and p.product_no = o.product_no;
    </select>

    <!-- 가게 이름 가져오기 -->
    <select id="getStoreName" parameterType="String" resultType="String">
        SELECT store_name FROM Store WHERE store_id = #{store_id};
    </select>

    <!-- 사용자 닉네임 가져오기 -->
    <select id="getUserNickname" parameterType="String" resultType="String">
        SELECT user_name FROM Account WHERE user_id = #{user_id};
    </select>
</mapper>