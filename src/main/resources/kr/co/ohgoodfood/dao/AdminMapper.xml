<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.co.ohgoodfood.dao.AdminMapper">
	
	<!-- Mapper 테스트용 -->
	<select id="getAccountList" parameterType="kr.co.ohgoodfood.dto.Account"  resultType="kr.co.ohgoodfood.dto.Account">
		SELECT * FROM Account;
	</select>

	<!-- 전년 전체 매출 조회 -->
	<select id="getLastYearSalesTotal" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT IFNULL(SUM(p.paid_price+IFNULL(p.paid_point,0)), 0) 
		FROM Paid p JOIN Orders o ON p.order_no = o.order_no
		WHERE EXTRACT(YEAR FROM p.paid_time) = EXTRACT(YEAR FROM SYSDATE()) - 1 AND p.paid_status = 'Y'
	</select>

	<!-- 금년 전체 매출 조회 -->
	<select id="getThisYearSalesTotal" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT IFNULL(SUM(p.paid_price+IFNULL(p.paid_point,0)), 0) 
		FROM Paid p JOIN Orders o ON p.order_no = o.order_no
		WHERE EXTRACT(YEAR FROM p.paid_time) = EXTRACT(YEAR FROM SYSDATE()) AND p.paid_status = 'Y'
	</select>

	<!-- 전월 전체 매출 조회 -->
	<select id="getPreviousMonthSalesTotal" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT IFNULL(SUM(p.paid_price+IFNULL(p.paid_point,0)), 0) 
		FROM Paid p JOIN Orders o ON p.order_no = o.order_no
		WHERE EXTRACT(YEAR FROM p.paid_time) = EXTRACT(YEAR FROM SYSDATE()) 
		AND EXTRACT(MONTH FROM p.paid_time) = EXTRACT(MONTH FROM SYSDATE()) - 1 AND p.paid_status = 'Y'
	</select>

	<!-- 이번 달 전체 매출 조회 -->
	<select id="getThisMonthSalesTotal" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT IFNULL(SUM(p.paid_price+IFNULL(p.paid_point,0)), 0) 
		FROM Paid p JOIN Orders o ON p.order_no = o.order_no
		WHERE EXTRACT(YEAR FROM p.paid_time) = EXTRACT(YEAR FROM SYSDATE()) 
		AND EXTRACT(MONTH FROM p.paid_time) = EXTRACT(MONTH FROM SYSDATE()) AND p.paid_status = 'Y'
	</select>

	<!-- 전년 전체 주문 건수 -->
	<select id="getLastYearOrderCountTotal" parameterType="kr.co.ohgoodfood.dto.Orders" resultType="int">
		SELECT COUNT(*)
		FROM Orders
		WHERE EXTRACT(YEAR FROM ordered_at) = EXTRACT(YEAR FROM SYSDATE()) - 1 AND order_status != 'ready'
	</select>

	<!-- 금년 전체 주문 건수 -->
	<select id="getThisYearOrderCountTotal" parameterType="kr.co.ohgoodfood.dto.Orders" resultType="int">	
		SELECT COUNT(*) AS order_count
		FROM Orders
		WHERE EXTRACT(YEAR FROM ordered_at) = EXTRACT(YEAR FROM SYSDATE()) AND order_status != 'ready'
	</select>

	<!-- 전월 전체 주문 건수 -->
	<select id="getPreviousMonthOrderCountTotal" parameterType="kr.co.ohgoodfood.dto.Orders" resultType="int">
		SELECT COUNT(*) AS order_count
		FROM Orders
		WHERE EXTRACT(YEAR FROM ordered_at) = EXTRACT(YEAR FROM SYSDATE()) AND EXTRACT(MONTH FROM ordered_at) = EXTRACT(MONTH FROM SYSDATE()) - 1 AND order_status != 'ready'
	</select>

	<!-- 이번 달 전체 주문 건수 -->
	<select id="getThisMonthOrderCountTotal" parameterType="kr.co.ohgoodfood.dto.Orders" resultType="int">
		SELECT COUNT(*) AS order_count
		FROM Orders
		WHERE EXTRACT(YEAR FROM ordered_at) = EXTRACT(YEAR FROM SYSDATE()) AND EXTRACT(MONTH FROM ordered_at) = EXTRACT(MONTH FROM SYSDATE()) AND order_status != 'ready'
	</select>

	<!-- 금일 전체 주문 건수 -->
	<select id="getTodayOrderCountTotal" parameterType="kr.co.ohgoodfood.dto.Orders" resultType="int">
		SELECT COUNT(*) AS order_count
		FROM Orders
		WHERE EXTRACT(YEAR FROM ordered_at) = EXTRACT(YEAR FROM SYSDATE()) AND EXTRACT(MONTH FROM ordered_at) = EXTRACT(MONTH FROM SYSDATE()) 
		AND EXTRACT(DAY FROM ordered_at) = EXTRACT(DAY FROM SYSDATE()) AND order_status != 'ready'
	</select>

	<!-- 미승인 점포 수 검색 -->
	<select id="getUnapprovedStoreCountTotal" resultType="int">
		SELECT COUNT(*)
		FROM Store
		WHERE confirmed = 'N'
	</select>

	<!-- 단일 회원 목록 조회 -->
	<select id="getUser" parameterType="kr.co.ohgoodfood.dto.Account" resultType="kr.co.ohgoodfood.dto.Account">
		SELECT *
		FROM Account
		WHERE user_id = #{s_value}
	</select>

	<!-- 단일 회원 정보 업데이트 -->
	<update id="updateUser" parameterType="kr.co.ohgoodfood.dto.Account">
		UPDATE Account
		SET user_name = #{user_name}, phone_number = #{phone_number}, location_agreement = #{location_agreement}
		WHERE user_id = #{user_id}
	</update>

	<!-- Account 검색 -->
	<select id="searchAccounts" parameterType="kr.co.ohgoodfood.dto.Account" resultType="kr.co.ohgoodfood.dto.Account">
		SELECT *
		FROM Account
		WHERE 1=1
		<!-- 완전일치 검색 -->
		<if test="s_value != null and s_value != ''">
			AND ${s_type} = #{s_value}
		</if>
		<!-- 정렬 조건 -->
		ORDER BY join_date DESC
		LIMIT ${startIdx}, 7
	</select>

	<!-- Account 개수 -->
	<select id="countAccounts" parameterType="kr.co.ohgoodfood.dto.Account" resultType="int">
		SELECT count(*)
		FROM Account
		WHERE 1=1
		<!-- 완전일치 검색 -->
		<if test="s_value != null and s_value != ''">
			AND ${s_type} = #{s_value}
		</if>
	</select>

	<!-- Store 검색 -->
	<select id="searchStores" parameterType="kr.co.ohgoodfood.dto.Store" resultType="kr.co.ohgoodfood.dto.Store">
		SELECT *
		FROM Store
		WHERE 1=1
		<!-- 완전일치 검색 -->
		<if test="s_value != null and s_value != ''">
			AND ${s_type} = #{s_value}
		</if>
		ORDER BY join_date DESC
		LIMIT ${startIdx}, 7
	</select>

	<!-- 미승인 점포 가져오기 -->
	<select id="getUnapprovedStore" parameterType="kr.co.ohgoodfood.dto.Store" resultType="kr.co.ohgoodfood.dto.Store">
		SELECT *
		FROM Store
		WHERE confirmed != 'Y'
		LIMIT ${startIdx}, 7
	</select>

	<!-- Store 개수 -->
	<select id="countStores" parameterType="kr.co.ohgoodfood.dto.Store" resultType="int">
		SELECT count(*)
		FROM Store
		WHERE 1=1
		<!-- 완전일치 검색 -->
		<if test="s_value != null and s_value != ''">
			AND ${s_type} = #{s_value}
		</if>
	</select>

	<!-- Store 승인 변경 -->
	<update id="approveStore" parameterType="kr.co.ohgoodfood.dto.Store">
		UPDATE Store
		SET confirmed = #{confirmed}
		WHERE store_id = #{store_id}
	</update>

	<!-- Store 전년 매출 조회 -->
	<select id="getLastYearSalesStore" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT IFNULL(SUM(p.paid_price+IFNULL(p.paid_point,0)), 0) AS sales
		FROM Paid p JOIN Orders o ON p.order_no = o.order_no
		WHERE o.store_id = #{store_id} AND p.paid_status = 'Y' AND EXTRACT(YEAR FROM p.paid_time) = EXTRACT(YEAR FROM SYSDATE()) - 1
		GROUP BY o.store_id
	</select>

	<!-- Store 금년 매출 조회 -->
	<select id="getThisYearSalesStore" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT IFNULL(SUM(p.paid_price+IFNULL(p.paid_point,0)), 0)
		FROM Paid p JOIN Orders o ON p.order_no = o.order_no
		WHERE o.store_id = #{store_id} AND p.paid_status = 'Y' AND EXTRACT(YEAR FROM p.paid_time) = EXTRACT(YEAR FROM SYSDATE())
		GROUP BY o.store_id
	</select>

	<!-- Store 전월 매출 조회 -->
	<select id="getPreviousMonthSalesStore" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT IFNULL(SUM(p.paid_price+IFNULL(p.paid_point,0)), 0) 
		FROM Paid p JOIN Orders o ON p.order_no = o.order_no
		WHERE o.store_id = #{store_id} AND p.paid_status = 'Y' AND EXTRACT(YEAR FROM p.paid_time) = EXTRACT(YEAR FROM SYSDATE()) AND EXTRACT(MONTH FROM p.paid_time) = EXTRACT(MONTH FROM SYSDATE()) - 1
		GROUP BY o.store_id
	</select>

	<!-- Store 이번 달 매출 조회 -->
	<select id="getThisMonthSalesStore" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT IFNULL(SUM(p.paid_price+IFNULL(p.paid_point,0)), 0)
		FROM Paid p JOIN Orders o ON p.order_no = o.order_no
		WHERE o.store_id = #{store_id} AND p.paid_status = 'Y' AND EXTRACT(YEAR FROM p.paid_time) = EXTRACT(YEAR FROM SYSDATE()) AND EXTRACT(MONTH FROM p.paid_time) = EXTRACT(MONTH FROM SYSDATE())
		GROUP BY o.store_id
	</select>

	<!-- Store 기간 지정 매출 조회 -->
	<select id="getPeriodSalesStore" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT IFNULL(SUM(p.paid_price+IFNULL(p.paid_point,0)), 0)
		FROM Paid p JOIN Orders o ON p.order_no = o.order_no
		WHERE o.store_id = #{store_id} AND p.paid_status = 'Y' AND p.paid_time BETWEEN STR_TO_DATE(CONCAT(#{start_date}, ' 00:00:00'), '%Y-%m-%d %H:%i:%s')
        AND 
        STR_TO_DATE(CONCAT(#{end_date}, ' 23:59:59'), '%Y-%m-%d %H:%i:%s')
		GROUP BY o.store_id
	</select>

	<!-- Store 금일 주문 건수 -->
	<select id="getTodayOrderCountStore" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT COUNT(*)
		FROM Orders
		WHERE store_id = #{store_id} AND ordered_at BETWEEN DATE_FORMAT(NOW(), '%Y-%m-%d 00:00:00') AND DATE_FORMAT(NOW(), '%Y-%m-%d 23:59:59') AND order_status != 'ready'
	</select>

	<!-- Store 금월 주문 건수 -->
	<select id="getThisMonthOrderCountStore" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT COUNT(*)
		FROM Orders
		WHERE store_id = #{store_id} AND EXTRACT(YEAR FROM ordered_at) = EXTRACT(YEAR FROM SYSDATE()) 
		AND EXTRACT(MONTH FROM ordered_at) = EXTRACT(MONTH FROM SYSDATE()) AND order_status != 'ready'
	</select>

	<!-- Store 금년 주문 건수 -->
	<select id="getThisYearOrderCountStore" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT COUNT(*)
		FROM Orders
		WHERE store_id = #{store_id} AND EXTRACT(YEAR FROM ordered_at) = EXTRACT(YEAR FROM SYSDATE()) AND order_status != 'ready'
	</select>
	
	<!-- Store 전년 주문 건수 -->
	<select id="getLastYearOrderCountStore" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT COUNT(*)
		FROM Orders
		WHERE store_id = #{store_id} AND EXTRACT(YEAR FROM ordered_at) = EXTRACT(YEAR FROM SYSDATE()) - 1 AND order_status != 'ready'
	</select>

	<!-- Store 기간 지정 주문 건수 -->
	<select id="getPeriodOrderCountStore" parameterType="kr.co.ohgoodfood.dto.StoreSales" resultType="int">
		SELECT COUNT(*)
		FROM Orders
		WHERE store_id = #{store_id} AND ordered_at BETWEEN STR_TO_DATE(CONCAT(#{start_date}, ' 00:00:00'), '%Y-%m-%d %H:%i:%s')
		AND STR_TO_DATE(CONCAT(#{end_date}, ' 23:59:59'), '%Y-%m-%d %H:%i:%s') AND order_status != 'ready'
	</select>

	<!-- Orders 검색 -->
	<select id="searchOrdersPersonal" parameterType="kr.co.ohgoodfood.dto.Orders" resultType="kr.co.ohgoodfood.dto.Orders">
		SELECT o.order_no AS order_no, o.user_id AS user_id, o.store_id AS store_id, o.quantity AS quantity, p.paid_price AS s_price, o.ordered_at AS ordered_at, o.picked_at AS picked_at, o.order_status AS order_status
		FROM Orders o LEFT JOIN Paid p ON o.order_no = p.order_no
		WHERE 1=1 AND order_status != 'ready'
		<!-- 완전일치 검색 -->
		<if test="s_value != null and s_value != ''">
			AND o.${s_type} = #{s_value} 
		</if>
		ORDER BY o.order_no DESC
		LIMIT ${startIdx}, 7
	</select>

	<!-- Orders 개수 -->
	<select id="countOrders" parameterType="kr.co.ohgoodfood.dto.Orders" resultType="int">
		SELECT COUNT(*)
		FROM Orders
		WHERE 1=1 AND order_status != 'ready'
		<if test="s_value != null and s_value != ''">
			AND ${s_type} = #{s_value} 
		</if>
	</select>

	<!-- Orders 주문 상태 변경 -->
	<update id="updateOrderStatusPersonal" parameterType="kr.co.ohgoodfood.dto.Orders">
		UPDATE Orders
		SET order_status = #{order_status}
		WHERE order_no = #{order_no}
	</update>

	<!-- Paid 검색 -->
	<select id="searchPaidPersonal" parameterType="kr.co.ohgoodfood.dto.Paid" resultType="kr.co.ohgoodfood.dto.Paid">
		SELECT p.paid_no AS paid_no, o.user_id AS user_id, o.store_id AS s_store_id, o.order_no AS order_no, p.paid_price AS paid_price, 
		p.paid_time AS paid_time, p.paid_type AS paid_type, p.paid_status AS paid_status, p.fail_reason AS fail_reason, p.paid_point AS paid_point, p.paid_code AS paid_code 
		FROM Orders o JOIN Paid p ON o.order_no = p.order_no
		WHERE 1=1 AND o.order_status != 'ready'
		<if test="s_value != null and s_value != ''">
			AND p.${s_type} = #{s_value}
		</if>
		ORDER BY p.paid_no DESC
		LIMIT ${startIdx}, 7
	</select>

	<!-- Paid 개수 -->
	<select id="countPaid" parameterType="kr.co.ohgoodfood.dto.Paid" resultType="int">
		SELECT COUNT(*)
		FROM Paid p
		JOIN Orders o ON p.order_no = o.order_no
		WHERE 1=1 AND o.order_status != 'ready'
		<if test="s_value != null and s_value != ''">
			AND p.${s_type} = #{s_value}
		</if>
	</select>

	<!-- Paid 결제 상태 변경 -->
	<update id="updatePaidStatusPersonal" parameterType="kr.co.ohgoodfood.dto.Paid">
		UPDATE Paid
		SET paid_status = #{paid_status}
		WHERE paid_no = #{paid_no}
	</update>

	<!-- Paid 실패 이유 변경 -->
	<update id="updatePaidFailReasonPersonal" parameterType="kr.co.ohgoodfood.dto.Paid">
		UPDATE Paid
		SET fail_reason = #{fail_reason}
		WHERE paid_no = #{paid_no}
	</update>

	<!-- Alram 검색 -->
	<select id="searchAlarm" parameterType="kr.co.ohgoodfood.dto.Alarm" resultType="kr.co.ohgoodfood.dto.Alarm">
		SELECT *
		FROM Alarm
		WHERE 1=1
		<if test="s_value != null and s_value != ''">
			AND ${s_type} = #{s_value}
		</if>
		ORDER BY alarm_no DESC
		LIMIT ${startIdx}, 7
	</select>

	<!-- Alarm 개수 -->
	<select id="countAlarm" parameterType="kr.co.ohgoodfood.dto.Alarm" resultType="int">
		SELECT COUNT(*)
		FROM Alarm
		WHERE 1=1
		<if test="s_value != null and s_value != ''">
			AND ${s_type} = #{s_value}
		</if>
	</select>

	<!-- Alarm 읽음 처리 -->
	<update id="readAlarm" parameterType="kr.co.ohgoodfood.dto.Alarm">
		UPDATE Alarm
		SET alarm_read = #{alarm_read}
		WHERE alarm_no = #{alarm_no}
	</update>

	<!-- Alarm 디스플레이 처리-->
	<update id="displayAlarm" parameterType="kr.co.ohgoodfood.dto.Alarm">
		UPDATE Alarm
		SET alarm_displayed = #{alarm_displayed}
		WHERE alarm_no = #{alarm_no}
	</update>

	<!-- Alarm 보내기 -->
	<insert id="sendAlarm" parameterType="kr.co.ohgoodfood.dto.Alarm">
		INSERT INTO Alarm (alarm_title, alarm_contents, sended_at, alarm_displayed, receive_id, alarm_read)
		VALUES (#{alarm_title}, #{alarm_contents}, SYSDATE(), "Y", #{receive_id}, "N")
	</insert>

	<!-- 수신자 유효성 검사 Account -->
	<select id="checkReceiverAccount" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM Account
		WHERE user_id = #{receiveId} 
	</select>

	<!-- 수신자 유효성 검사 Store -->
	<select id="checkReceiverStore" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM Store
		WHERE store_id = #{receiveId}
	</select>

	<!-- Review 검색 -->
	<select id="searchReview" parameterType="kr.co.ohgoodfood.dto.Review" resultType="kr.co.ohgoodfood.dto.Review">
		SELECT *
		FROM Review
		WHERE 1=1
		<if test="s_value != null and s_value != ''">
			AND ${s_type} = #{s_value}
		</if>
		ORDER BY review_no DESC
		LIMIT ${startIdx}, 7
	</select>

	<!-- Review 개수 -->
	<select id="countReview" parameterType="kr.co.ohgoodfood.dto.Review" resultType="int">
		SELECT COUNT(*)
		FROM Review
		WHERE 1=1
		<if test="s_value != null and s_value != ''">
			AND ${s_type} = #{s_value}
		</if>
	</select>
	
	<!-- Review 블러드 처리 -->
	<update id="blockReview" parameterType="kr.co.ohgoodfood.dto.Review">
		UPDATE Review
		SET is_blocked = #{is_blocked}
		WHERE review_no = #{review_no}
	</update>

	<!-- Admin 로그인 -->
	<select id="loginAdmin" parameterType="kr.co.ohgoodfood.dto.Admin" resultType="kr.co.ohgoodfood.dto.Admin">
		SELECT *
		FROM Admin
		WHERE admin_id = #{admin_id} AND admin_pwd = #{admin_pwd}
	</select>

    <!-- Admin 로그인 체크 -->
	<select id="checkAdminLogin" parameterType="kr.co.ohgoodfood.dto.Admin" resultType="int">
		SELECT COUNT(*)
		FROM Admin
		WHERE admin_id = #{admin_id} AND admin_pwd = MD5(#{admin_pwd})
	</select>

	<!-- 금월 신규 회원 수 -->
	<select id="getThisMonthNewUserCount" resultType="int">
		SELECT COUNT(*)
		FROM Account
		WHERE EXTRACT(YEAR FROM join_date) = EXTRACT(YEAR FROM SYSDATE()) AND EXTRACT(MONTH FROM join_date) = EXTRACT(MONTH FROM SYSDATE())
	</select>

	<!-- 금월 신규 매장 수 -->
	<select id="getThisMonthNewStoreCount" resultType="int">
		SELECT COUNT(*)
		FROM Store
		WHERE EXTRACT(YEAR FROM join_date) = EXTRACT(YEAR FROM SYSDATE()) AND EXTRACT(MONTH FROM join_date) = EXTRACT(MONTH FROM SYSDATE())
	</select>
</mapper>